# 5. Программа запрашивает у пользователя строку чисел, разделённых пробелом.
# При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел,
# разделённых пробелом и снова нажать Enter. Сумма вновь введённых чисел будет добавляться
# к уже подсчитанной сумме. Но если вместо числа вводится специальный символ,
# выполнение программы завершается. Если специальный символ введён после нескольких чисел,
# то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.

def sumstr(arg_1):  # Функция обработки строки
    global my_exit  # Добавляем глобальную переменную - триггер выхода
    res = 0         # Обнуляем локальный результат
    funlist = arg_1.split()  # Преобразуем строку в список значений
    for my_count in range(0, len(funlist)):     # Будем обрабатывать полученный список
        if funlist[my_count] == "e":    # Проверяем значение на соответствие специальному символу
            my_exit = True              # Устанавливаем триггер выхода
            return res                  # Возвращаем текущий результат
        try:                                    # Если это был не специальный символ, то проверяем...
            my_num = float(funlist[my_count])   # ... является ли значение символа числом
            res += my_num                       # Если да, то добавим его к текущему результату...
        except ValueError:                      # ... а если не является...
            continue                            # ... пропустим его, и обработаем следующий элемент
    return res          # Когда вся строка обработана, вызвращаем текущий результат


# Обозначим переменную, в которую будем помещать результат и триггер на выход:
my_result = 0
my_exit = False

while not my_exit:  # Пока не сработал триггер, выводим текущий результат и запрашиваем новую строку:
    print(f'\nCurrent result: {my_result}')
    my_string = input("Input string of numbers, ""e"" for exit: ")
    my_result += sumstr(my_string)  # Обрабатываем строку и добавляем значение к результату

print(f'\nFinal result: {my_result}')   # Выводим конечный результат
