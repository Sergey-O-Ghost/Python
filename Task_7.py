# 7. Создать вручную и заполнить несколькими строками текстовый файл, в котором каждая строка
# будет содержать данные о фирме: название, форма собственности, выручка, издержки.
# Пример строки файла: firm_1 ООО 10000 5000.
#
# Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль.
# Если фирма получила убытки, в расчёт средней прибыли её не включать.
# Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями,
# а также словарь со средней прибылью. Если фирма получила убытки,
# также добавить её в словарь (со значением убытков).
# Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
#
# Итоговый список сохранить в виде json-объекта в соответствующий файл.
# Пример json-объекта:
# [{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
# Подсказка: использовать менеджер контекста.


def company_info(arg):      # Функция разбора строки
    sub_list = arg.split()  # Разделяем строку на список параметров
    sub_name = sub_list[1] + " \"" + sub_list[0] + "\""     # Формируем полное название фирмы
    sub_turnover = int(sub_list[2])                         # Выделяем обороты для наглядности
    sub_cost = int(sub_list[3])                             # Выделяем затраты для наглядности
    sub_profit = abs(sub_turnover - sub_cost)               # Вычисляем разницу (абсолютную)
    if sub_turnover >= sub_cost:                        # Если обороты не меньше затрат...
        sub_assessment = True                           # ... ставим положительную оценку...
    else:                                               # ... в ином случае...
        sub_assessment = False                          # ... оценка отрицательная
    res = [sub_name, sub_profit, sub_assessment]    # Формируем результат (Название, сальдо, оценка)...
    return res                                      # ... и возвращаем его


# Обозначаем переменные - список и три словаря:
my_list = []
my_dict_profit = {}
my_dict_average = {}
my_dict_loss = {}

with open('task_7.txt') as task_7:          # Открываем файл
    num_company = len(task_7.readlines())   # Считаем общее число фирм
    task_7.seek(0)                          # Возвращаем курсор на начало
    for ind in range(0, num_company):        # Считываем каждую строку
        my_str = task_7.readline()
        my_company = company_info(my_str)   # Обрабатываем её
        if my_company[2]:                                   # Если убытков не было...
            my_dict_profit[my_company[0]] = my_company[1]   # ... добавляем фирму в словарь без убытков...
        else:                                               # ... в ином случае...
            my_dict_loss[my_company[0]] = my_company[1]     # ... добавляем в словарь с убытками

sum_profit = 0                              # обнуляем общую прибыль
for company in my_dict_profit.keys():       # проходимся по всем ключам словаря без убытков
    sum_profit += my_dict_profit[company]   # добавляем к общей прибыли прибыль (в т.ч. нулевую) каждой фирмы
num_profit_company = len(my_dict_profit.keys())     # Выделяем число фирм без убытков для наглядности
# Добавляем значение в словарь средней прибыли
my_dict_average[f'Average profit for {num_profit_company} company'] = sum_profit / num_profit_company
my_list = [my_dict_profit, my_dict_average, my_dict_loss]   # Формируем итоговый список...
print(my_list)                                              # ... и выводим его
